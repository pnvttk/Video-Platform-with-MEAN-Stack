**PART 2**
Guys, this series was made a while ago. You want to "npm install" all of your dependencies. Do not do what I did here and add them to the package.json. That was a mistake to do it that way.

Yeah exactly! So what you should do is go back to your command terminal and run: 
    npm install express (Hit Enter and wait for this to install)
    npm install mongoose (Hit Enter and wait for this to install)
    npm install bcryptjs (Hit Enter and wait for this to install)

and so on and so on for all the dependencies...
Once you're done installing all the dependencies, you will find them all in your package-lock.json file!

**PART 4**
passport.json
    ```
    const JwtStrategy = require('passport-jwt').Strategy;
    const ExtractJwt = require('passport-jwt').ExtractJwt;
    const User = require('../models/user');
    const config = require('../config/database')

    module.exports = function(passport) {
        let opts = {};
        opts.jwtFromRequest = ExtractJwt.fromAuthHeaderWithScheme('jwt');
        opts.secretOrKey = config.secret;
        passport.use(new JwtStrategy(opts, (jwt_payload, done) => {
            User.getUserById(jwt_payload.data._id, (err, user) => {
                if (err) {
                    return done(err, false);
                }
                if (user) {
                    return done(null, user);
                } else {
                    return done(null, false);
                    // or you could create a new account
                }

            });

        }));
    }
    ```

err : Cannot read property 'passport' of undefined     at SessionStrategy.authenticate
    ---> fix session add this line
    npm install express-session
    app.js
    ``` 
    const session = require("express-session");
    app.use(session({secret: "secret"}))
    ```

error: express-session deprecated
    ---> fix by edit this line
    ``` 
    app.use(session({
        secret: cookie_secret,
        resave: true,
        saveUninitialized: true
    }));
    ```
Error: Expected "payload" to be a plain object. at validate (D:\Y3T1\04_web_programing\mini_project\meanauthapp\node_modules\jsonwebtoken\sign.js:40:11)
    --> fix by edit add {} for user => {user}
    users.js
    ```
                if (isMatch) {
                    const token = jwt.sign({ user }, config.secret, {
                        expiresIn: 3600 // 1 hr
                    })
    ```
Error : Unauthorized in postman from checking jwt token
    --> fix by edit passport.js
    ```
    opts.jwtFromRequest = ExtractJwt.fromAuthHeaderWithScheme('jwt'); 
    change to jwt_payload.user._id
    ```

**PART 5**
Change Outputpath to ../public
becarful of bootstrap and navbar 
Also for those of you watching in 2020:
The HttpModule for the Angular import is deprecated you should now be using import { HttpClientModule} from '@angular/common/http';
https://angular.io/guide/deprecations

**PART 6**
Err : Property 'name' has no initializer and is not definitely assigned in the constructor.ts(2564)
    --> undefined name!
Err : Parameter 'user' implicitly has an 'any' type.ts
    --> edit to
    user:any
Err : Not all code paths return a value.
    --> add
    return undefined; // what the f is happanning????

**PART  7**
install rxjs
    --> npm install rxjs
Err : 'map' does not exist on type Observable
    Operator chaining has been transitioned to the use of .pipe() in RXJS v6, you should follow the recommended migration path for RXJS. Additionally, the catch operator has been renamed to catchError.
    REF : https://github.com/webmaxru/pwa-workshop-angular/issues/2
Err : Property 'json' does not exist on type 'Object'
    For future visitors: In the new HttpClient (Angular 4.3+), the response object is JSON by default, so you don't need to do response.json().data anymore. Just use response directly.
Err : Property 'success' does not exist on type 'Object'.
    For anyone getting:
    error TS2339: Property 'success' does not exist on type 'Object'. 
    error TS2339: Property 'msg' does not exist on type 'Object'.
    error TS2339: Property 'user' does not exist on type 'Object'.
    Use  --- >       
    (data as any).success 
    (data as any).msg 
    (data as any).user  
    instead of data.success/data.msg/data.user